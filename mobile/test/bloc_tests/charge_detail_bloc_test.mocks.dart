// Mocks generated by Mockito 5.4.1 from annotations
// in charge_station_finder/test/bloc_tests/charge_detail_bloc_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:charge_station_finder/common/failure.dart' as _i5;
import 'package:charge_station_finder/domain/charger/charger.dart' as _i6;
import 'package:charge_station_finder/domain/charger/charger_detail.dart'
    as _i7;
import 'package:charge_station_finder/domain/charger/charger_form.dart' as _i8;
import 'package:charge_station_finder/domain/charger/charger_repository_interface.dart'
    as _i3;
import 'package:charge_station_finder/domain/review/review.dart' as _i10;
import 'package:charge_station_finder/domain/review/review_repository_interface.dart'
    as _i9;
import 'package:charge_station_finder/utils/either.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChargerRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockChargerRepositoryInterface extends _i1.Mock
    implements _i3.ChargerRepositoryInterface {
  MockChargerRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>> fetchChargers(
          String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchChargers,
          [address],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Charger>>(
          this,
          Invocation.method(
            #fetchChargers,
            [address],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>> getChargersByAddress(
          String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChargersByAddress,
          [address],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Charger>>(
          this,
          Invocation.method(
            #getChargersByAddress,
            [address],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Charger>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>> getChargerDetail(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChargerDetail,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>>.value(
                _FakeEither_0<_i5.Failure, _i7.ChargerDetail>(
          this,
          Invocation.method(
            #getChargerDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> addCharger(_i8.ChargerForm? form) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCharger,
          [form],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #addCharger,
            [form],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> editCharger(
    _i8.ChargerForm? form,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editCharger,
          [
            form,
            id,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #editCharger,
            [
              form,
              id,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteCharger(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCharger,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteCharger,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>> rateCharger(
    String? id,
    double? rating,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #rateCharger,
          [
            id,
            rating,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>>.value(
                _FakeEither_0<_i5.Failure, _i7.ChargerDetail>(
          this,
          Invocation.method(
            #rateCharger,
            [
              id,
              rating,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.ChargerDetail>>);
}

/// A class which mocks [ReviewRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewRepositoryInterface extends _i1.Mock
    implements _i9.ReviewRepositoryInterface {
  MockReviewRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.Review>> addReview(
    String? content,
    String? chargerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReview,
          [
            content,
            chargerId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i10.Review>>.value(
            _FakeEither_0<_i5.Failure, _i10.Review>(
          this,
          Invocation.method(
            #addReview,
            [
              content,
              chargerId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i10.Review>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> editReview(
    String? content,
    String? reviewId,
    String? chargerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editReview,
          [
            content,
            reviewId,
            chargerId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #editReview,
            [
              content,
              reviewId,
              chargerId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteReview(String? reviewId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReview,
          [reviewId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteReview,
            [reviewId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
